{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_object_spread.js","node_modules/@swc/helpers/esm/_define_property.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $cd5a47cf8ef6d766$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nfunction $ad1c00e896d27009$export$71511d61b312f219(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n        ownKeys.forEach(function(key) {\n            (0, $cd5a47cf8ef6d766$export$71511d61b312f219)(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.state = [\n            [\n                null,\n                null,\n                null,\n                null\n            ],\n            [\n                null,\n                null,\n                null,\n                null\n            ],\n            [\n                null,\n                null,\n                null,\n                null\n            ],\n            [\n                null,\n                null,\n                null,\n                null\n            ]\n        ];\n        this.score = 0;\n        this.status = \"idle\";\n        this.moved = false;\n        this.nextCellId = 1;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var stateCopy = this.state.map(function(row) {\n                    return row.map(function(cell) {\n                        return cell ? (0, $ad1c00e896d27009$export$71511d61b312f219)({}, cell) : null;\n                    });\n                });\n                var transitions = [];\n                this.moved = false;\n                for(var i = 0; i < stateCopy.length; i++){\n                    var merged = [\n                        false,\n                        false,\n                        false,\n                        false\n                    ];\n                    for(var j = 0; j < stateCopy[i].length; j++){\n                        if (stateCopy[i][j] === null) continue;\n                        var k = j;\n                        while(k > 0 && stateCopy[i][k - 1] === null)k--;\n                        if (k !== j) {\n                            stateCopy[i][k] = stateCopy[i][j];\n                            stateCopy[i][j] = null;\n                            this.moved = true;\n                            transitions.push({\n                                id: stateCopy[i][k].id,\n                                type: \"move\",\n                                from: [\n                                    i,\n                                    j\n                                ],\n                                to: [\n                                    i,\n                                    k\n                                ]\n                            });\n                        }\n                        if (k > 0 && stateCopy[i][k - 1] !== null && stateCopy[i][k].value === stateCopy[i][k - 1].value && !merged[k - 1]) {\n                            transitions.push({\n                                id: stateCopy[i][k].id,\n                                type: \"merge\",\n                                from: [\n                                    i,\n                                    k\n                                ],\n                                to: [\n                                    i,\n                                    k - 1\n                                ],\n                                mergeIntoId: stateCopy[i][k - 1].id\n                            });\n                            stateCopy[i][k - 1].value *= 2;\n                            this.score += stateCopy[i][k - 1].value;\n                            stateCopy[i][k] = null;\n                            merged[k - 1] = true;\n                            this.moved = true;\n                        }\n                    }\n                }\n                return {\n                    newState: stateCopy,\n                    transitions: transitions,\n                    moved: this.moved\n                };\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var stateCopy = this.state.map(function(row) {\n                    return row.map(function(cell) {\n                        return cell ? (0, $ad1c00e896d27009$export$71511d61b312f219)({}, cell) : null;\n                    });\n                });\n                var transitions = [];\n                this.moved = false;\n                for(var i = 0; i < stateCopy.length; i++){\n                    var merged = [\n                        false,\n                        false,\n                        false,\n                        false\n                    ];\n                    for(var j = stateCopy[i].length - 1; j >= 0; j--){\n                        if (stateCopy[i][j] === null) continue;\n                        var k = j;\n                        while(k < stateCopy[i].length - 1 && stateCopy[i][k + 1] === null)k++;\n                        if (k !== j) {\n                            stateCopy[i][k] = stateCopy[i][j];\n                            stateCopy[i][j] = null;\n                            this.moved = true;\n                            transitions.push({\n                                id: stateCopy[i][k].id,\n                                type: \"move\",\n                                from: [\n                                    i,\n                                    j\n                                ],\n                                to: [\n                                    i,\n                                    k\n                                ]\n                            });\n                        }\n                        if (k < stateCopy[i].length - 1 && stateCopy[i][k + 1] !== null && stateCopy[i][k].value === stateCopy[i][k + 1].value && !merged[k + 1]) {\n                            transitions.push({\n                                id: stateCopy[i][k].id,\n                                type: \"merge\",\n                                from: [\n                                    i,\n                                    k\n                                ],\n                                to: [\n                                    i,\n                                    k + 1\n                                ],\n                                mergeIntoId: stateCopy[i][k + 1].id\n                            });\n                            stateCopy[i][k + 1].value *= 2;\n                            this.score += stateCopy[i][k + 1].value;\n                            stateCopy[i][k] = null;\n                            merged[k + 1] = true;\n                            this.moved = true;\n                        }\n                    }\n                }\n                return {\n                    newState: stateCopy,\n                    transitions: transitions,\n                    moved: this.moved\n                };\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var stateCopy = this.state.map(function(row) {\n                    return row.map(function(cell) {\n                        return cell ? (0, $ad1c00e896d27009$export$71511d61b312f219)({}, cell) : null;\n                    });\n                });\n                var transitions = [];\n                this.moved = false;\n                for(var j = 0; j < stateCopy[0].length; j++){\n                    var merged = [\n                        false,\n                        false,\n                        false,\n                        false\n                    ];\n                    for(var i = 0; i < stateCopy.length; i++){\n                        if (stateCopy[i][j] === null) continue;\n                        var k = i;\n                        while(k > 0 && stateCopy[k - 1][j] === null)k--;\n                        if (k !== i) {\n                            stateCopy[k][j] = stateCopy[i][j];\n                            stateCopy[i][j] = null;\n                            this.moved = true;\n                            transitions.push({\n                                id: stateCopy[k][j].id,\n                                type: \"move\",\n                                from: [\n                                    i,\n                                    j\n                                ],\n                                to: [\n                                    k,\n                                    j\n                                ]\n                            });\n                        }\n                        if (k > 0 && stateCopy[k - 1][j] !== null && stateCopy[k][j].value === stateCopy[k - 1][j].value && !merged[k - 1]) {\n                            transitions.push({\n                                id: stateCopy[k][j].id,\n                                type: \"merge\",\n                                from: [\n                                    k,\n                                    j\n                                ],\n                                to: [\n                                    k - 1,\n                                    j\n                                ],\n                                mergeIntoId: stateCopy[k - 1][j].id\n                            });\n                            stateCopy[k - 1][j].value *= 2;\n                            this.score += stateCopy[k - 1][j].value;\n                            stateCopy[k][j] = null;\n                            merged[k - 1] = true;\n                            this.moved = true;\n                        }\n                    }\n                }\n                return {\n                    newState: stateCopy,\n                    transitions: transitions,\n                    moved: this.moved\n                };\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var stateCopy = this.state.map(function(row) {\n                    return row.map(function(cell) {\n                        return cell ? (0, $ad1c00e896d27009$export$71511d61b312f219)({}, cell) : null;\n                    });\n                });\n                var transitions = [];\n                this.moved = false;\n                for(var j = 0; j < stateCopy[0].length; j++){\n                    var merged = [\n                        false,\n                        false,\n                        false,\n                        false\n                    ];\n                    for(var i = stateCopy.length - 1; i >= 0; i--){\n                        if (stateCopy[i][j] === null) continue;\n                        var k = i;\n                        while(k < stateCopy.length - 1 && stateCopy[k + 1][j] === null)k++;\n                        if (k !== i) {\n                            stateCopy[k][j] = stateCopy[i][j];\n                            stateCopy[i][j] = null;\n                            this.moved = true;\n                            transitions.push({\n                                id: stateCopy[k][j].id,\n                                type: \"move\",\n                                from: [\n                                    i,\n                                    j\n                                ],\n                                to: [\n                                    k,\n                                    j\n                                ]\n                            });\n                        }\n                        if (k < stateCopy.length - 1 && stateCopy[k + 1][j] !== null && stateCopy[k][j].value === stateCopy[k + 1][j].value && !merged[k + 1]) {\n                            transitions.push({\n                                id: stateCopy[k][j].id,\n                                type: \"merge\",\n                                from: [\n                                    k,\n                                    j\n                                ],\n                                to: [\n                                    k + 1,\n                                    j\n                                ],\n                                mergeIntoId: stateCopy[k + 1][j].id\n                            });\n                            stateCopy[k + 1][j].value *= 2;\n                            this.score += stateCopy[k + 1][j].value;\n                            stateCopy[k][j] = null;\n                            merged[k + 1] = true;\n                            this.moved = true;\n                        }\n                    }\n                }\n                return {\n                    newState: stateCopy,\n                    transitions: transitions,\n                    moved: this.moved\n                };\n            }\n        },\n        {\n            key: \"defineStep\",\n            value: function defineStep(param, direction) {\n                var _param = (0, $efec029548ccee7f$export$71511d61b312f219)(param, 2), rowIndex = _param[0], columnIndex = _param[1];\n                var currentItem = this.state[rowIndex][columnIndex];\n                var currentRow = this.state[rowIndex];\n                var currentColumn = this.state.map(function(row) {\n                    return row[columnIndex];\n                });\n                var step = 0;\n                switch(direction){\n                    case \"left\":\n                        for(var i = columnIndex - 1; i >= 0; i--){\n                            if (currentRow[i] === 0) step++;\n                            else if (currentRow[i] === currentItem) return step + 1;\n                            else break;\n                        }\n                        return step;\n                    case \"right\":\n                        for(var i1 = columnIndex + 1; i1 < currentRow.length; i1++){\n                            if (currentRow[i1] === 0) step++;\n                            else if (currentRow[i1] === currentItem) return step + 1;\n                            else break;\n                        }\n                        return step;\n                    case \"up\":\n                        for(var i2 = rowIndex - 1; i2 >= 0; i2--){\n                            if (currentColumn[i2] === 0) step++;\n                            else if (currentColumn[i2] === currentItem) return step + 1;\n                            else break;\n                        }\n                        return step;\n                    case \"down\":\n                        for(var i3 = rowIndex + 1; i3 < currentColumn.length; i3++){\n                            if (currentColumn[i3] === 0) step++;\n                            else if (currentColumn[i3] === currentItem) return step + 1;\n                            else break;\n                        }\n                        return step;\n                }\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.born();\n                this.born();\n                this.status = \"playing\";\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.state = [\n                    [\n                        null,\n                        null,\n                        null,\n                        null\n                    ],\n                    [\n                        null,\n                        null,\n                        null,\n                        null\n                    ],\n                    [\n                        null,\n                        null,\n                        null,\n                        null\n                    ],\n                    [\n                        null,\n                        null,\n                        null,\n                        null\n                    ]\n                ];\n                this.status = \"idle\";\n                this.score = 0;\n                this.nextCellId = 1;\n            }\n        },\n        {\n            key: \"check\",\n            value: function check() {\n                for(var i = 0; i < this.state.length; i++)for(var j = 0; j < this.state[i].length; j++){\n                    var current = this.state[i][j];\n                    if (current !== null && current.value >= 2048) {\n                        this.status = \"win\";\n                        return;\n                    }\n                    if (!current) return;\n                    if (j < this.state[i].length - 1) {\n                        var rightCell = this.state[i][j + 1];\n                        if (rightCell !== null && rightCell.value === current.value) return;\n                    }\n                    if (i < this.state.length - 1) {\n                        var downCell = this.state[i + 1][j];\n                        if (downCell !== null && downCell.value === current.value) return;\n                    }\n                }\n                this.status = \"lose\";\n            }\n        },\n        {\n            key: \"born\",\n            value: function born() {\n                var emptyCells = [];\n                for(var i = 0; i < 4; i++){\n                    for(var j = 0; j < 4; j++)if (this.state[i][j] === null) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (emptyCells.length === 0) return;\n                var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), row = _emptyCells_Math_floor[0], col = _emptyCells_Math_floor[1];\n                var value = Math.random() < 0.1 ? 4 : 2;\n                var clearStateCell = {\n                    id: this.nextCellId++,\n                    value: value\n                };\n                this.state[row][col] = clearStateCell;\n                var spawnTransition = {\n                    id: clearStateCell.id,\n                    type: \"spawn\",\n                    to: [\n                        row,\n                        col\n                    ],\n                    value: value\n                };\n                return spawnTransition;\n            }\n        },\n        {\n            key: \"performMove\",\n            value: function performMove(direction) {\n                var moveResult;\n                switch(direction){\n                    case \"LEFT\":\n                        moveResult = this.moveLeft();\n                        break;\n                    case \"RIGHT\":\n                        moveResult = this.moveRight();\n                        break;\n                    case \"UP\":\n                        moveResult = this.moveUp();\n                        break;\n                    case \"DOWN\":\n                        moveResult = this.moveDown();\n                        break;\n                    default:\n                        return {\n                            newState: this.state,\n                            transitions: [],\n                            moved: false\n                        };\n                }\n                if (moveResult.moved) {\n                    this.state = moveResult.newState;\n                    var spawnTransition = this.born();\n                    moveResult.transitions.push(spawnTransition);\n                    this.check();\n                }\n                return moveResult;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$button = document.querySelector(\".button\");\nvar $197cd56b15c33885$var$field = document.querySelector(\".game-field\");\nZ;\nvar $197cd56b15c33885$var$scoreElement = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$bestScoreElement = document.querySelector(\".best-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$ANIMATION_DURATION = 100;\nvar $197cd56b15c33885$var$CELL_OFFSET = 83;\nvar $197cd56b15c33885$var$prevMoveEnded = true;\n$197cd56b15c33885$var$bestScoreElement.textContent = localStorage.getItem(\"bestScore\") || 0;\nfunction $197cd56b15c33885$var$saveScore() {\n    localStorage.setItem(\"bestScore\", $197cd56b15c33885$var$game.getScore());\n}\nfunction $197cd56b15c33885$var$animateAndRender(result) {\n    result.transitions.forEach(function(t) {\n        var cell = document.getElementById(\"cell-\".concat(t.id));\n        if (!cell) return;\n        if (t.type === \"move\" || t.type === \"merge\") cell.style.transform = \"translate(\".concat(t.to[1] * $197cd56b15c33885$var$CELL_OFFSET, \"px, \").concat(t.to[0] * $197cd56b15c33885$var$CELL_OFFSET, \"px)\");\n    });\n    setTimeout(function() {\n        result.transitions.forEach(function(t) {\n            if (t.type === \"merge\") {\n                var disappearingCell = document.getElementById(\"cell-\".concat(t.id));\n                var cell = document.getElementById(\"cell-\".concat(t.mergeIntoId));\n                if (disappearingCell) disappearingCell.remove();\n                if (cell) {\n                    var cellObject = $197cd56b15c33885$var$game.state[t.to[0]][t.to[1]];\n                    var newValue = cellObject ? cellObject.value : 0;\n                    cell.textContent = newValue;\n                    cell.className = \"cell cell--\".concat(cell.textContent);\n                }\n            }\n            if (t.type === \"spawn\") {\n                var cell1 = $197cd56b15c33885$var$createCellElement(t.value, t.to[0], t.to[1], t.id);\n                $197cd56b15c33885$var$field.appendChild(cell1);\n            }\n        });\n        $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n        if ($197cd56b15c33885$var$game.getScore() > parseInt($197cd56b15c33885$var$bestScoreElement.textContent)) {\n            $197cd56b15c33885$var$bestScoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n            $197cd56b15c33885$var$saveScore();\n        }\n        if ($197cd56b15c33885$var$game.status === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n        if ($197cd56b15c33885$var$game.status === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$prevMoveEnded = true;\n    }, $197cd56b15c33885$var$ANIMATION_DURATION);\n}\nfunction $197cd56b15c33885$var$gameCallback(e) {\n    if ([\n        \"ArrowLeft\",\n        \"ArrowRight\",\n        \"ArrowUp\",\n        \"ArrowDown\"\n    ].includes(e.key)) e.preventDefault();\n    if ($197cd56b15c33885$var$game.status !== \"playing\") return;\n    if ($197cd56b15c33885$var$prevMoveEnded) {\n        var result;\n        var direction = null;\n        if (e.type === \"keydown\" && e.key && [\n            \"ArrowLeft\",\n            \"ArrowRight\",\n            \"ArrowUp\",\n            \"ArrowDown\"\n        ].includes(e.key)) direction = e.key.replace(\"Arrow\", \"\").toUpperCase();\n        if ([\n            \"LEFT\",\n            \"RIGHT\",\n            \"UP\",\n            \"DOWN\"\n        ].includes(direction)) result = $197cd56b15c33885$var$game.performMove(direction);\n        else return;\n        if (result.moved) {\n            $197cd56b15c33885$var$prevMoveEnded = false;\n            $197cd56b15c33885$var$animateAndRender(result);\n        }\n    }\n}\nfunction $197cd56b15c33885$var$createCellElement(value, row, col, id) {\n    var cell = document.createElement(\"div\");\n    cell.id = \"cell-\".concat(id);\n    cell.className = \"cell cell--\".concat(value);\n    cell.textContent = value;\n    cell.style.transform = \"translate(\".concat(col * 83, \"px, \").concat(row * 83, \"px)\");\n    return cell;\n}\nfunction $197cd56b15c33885$var$clearBoard() {\n    var cells = $197cd56b15c33885$var$field.querySelectorAll(\".cell\");\n    cells.forEach(function(cell) {\n        return cell.remove();\n    });\n}\nfunction $197cd56b15c33885$var$initialiseBoard(boardState) {\n    for(var i = 0; i < boardState.length; i++)for(var j = 0; j < boardState[i].length; j++){\n        var cellObj = boardState[i][j];\n        var value = cellObj ? cellObj.value : 0;\n        if (value !== 0) {\n            var cell = $197cd56b15c33885$var$createCellElement(value, i, j, cellObj.id);\n            $197cd56b15c33885$var$field.appendChild(cell);\n        }\n    }\n}\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    if ($197cd56b15c33885$var$game.status !== \"idle\") {\n        $197cd56b15c33885$var$game.restart();\n        $197cd56b15c33885$var$clearBoard();\n        $197cd56b15c33885$var$button.textContent = \"Start\";\n        $197cd56b15c33885$var$button.classList.remove(\"restart\");\n        $197cd56b15c33885$var$button.classList.add(\"start\");\n        $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n        $197cd56b15c33885$var$messageStart.classList.remove(\"hidden\");\n        $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n        $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n        document.removeEventListener(\"keydown\", $197cd56b15c33885$var$gameCallback);\n        if ($197cd56b15c33885$var$game.status === \"idle\" && $197cd56b15c33885$var$button.textContent === \"Start\") return;\n    }\n    if ($197cd56b15c33885$var$button.textContent === \"Start\") {\n        $197cd56b15c33885$var$game.start();\n        $197cd56b15c33885$var$button.textContent = \"Restart\";\n        $197cd56b15c33885$var$button.classList.remove(\"start\");\n        $197cd56b15c33885$var$button.classList.add(\"restart\");\n        $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n        $197cd56b15c33885$var$initialiseBoard($197cd56b15c33885$var$game.getState());\n        $197cd56b15c33885$var$scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n        document.addEventListener(\"keydown\", $197cd56b15c33885$var$gameCallback);\n    }\n});\n\n})();\n//# sourceMappingURL=index.6d3d4475.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\n\nconst game = new Game();\nconst button = document.querySelector('.button');\n\nconst field = document.querySelector('.game-field');Z\n\nconst scoreElement = document.querySelector('.game-score');\nconst bestScoreElement = document.querySelector('.best-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageWin = document.querySelector('.message-win');\nconst messageLose = document.querySelector('.message-lose');\n\nconst ANIMATION_DURATION = 100;\nconst CELL_OFFSET = 83;\n\nlet prevMoveEnded = true;\n\nbestScoreElement.textContent = localStorage.getItem('bestScore') || 0;\n\nfunction saveScore() {\n  localStorage.setItem('bestScore', game.getScore());\n}\n\nfunction animateAndRender(result) {\n  result.transitions.forEach((t) => {\n    const cell = document.getElementById(`cell-${t.id}`);\n\n    if (!cell) {\n      return;\n    }\n\n    if (t.type === 'move' || t.type === 'merge') {\n      cell.style.transform = `translate(${t.to[1] * CELL_OFFSET}px, ${t.to[0] * CELL_OFFSET}px)`;\n    }\n  });\n\n  setTimeout(() => {\n    result.transitions.forEach((t) => {\n      if (t.type === 'merge') {\n        const disappearingCell = document.getElementById(`cell-${t.id}`);\n        const cell = document.getElementById(`cell-${t.mergeIntoId}`);\n\n        if (disappearingCell) {\n          disappearingCell.remove();\n        }\n\n        if (cell) {\n          const cellObject = game.state[t.to[0]][t.to[1]];\n          const newValue = cellObject ? cellObject.value : 0;\n\n          cell.textContent = newValue;\n          cell.className = `cell cell--${cell.textContent}`;\n        }\n      }\n\n      if (t.type === 'spawn') {\n        const cell = createCellElement(t.value, t.to[0], t.to[1], t.id);\n\n        field.appendChild(cell);\n      }\n    });\n\n    scoreElement.textContent = game.getScore();\n\n    if (game.getScore() > parseInt(bestScoreElement.textContent)) {\n      bestScoreElement.textContent = game.getScore();\n      saveScore();\n    }\n\n    if (game.status === 'lose') {\n      messageLose.classList.remove('hidden');\n    }\n\n    if (game.status === 'win') {\n      messageWin.classList.remove('hidden');\n    }\n\n    prevMoveEnded = true;\n  }, ANIMATION_DURATION);\n}\n\nfunction gameCallback(e) {\n  if (['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(e.key)) {\n    e.preventDefault();\n  }\n\n  if (game.status !== 'playing') {\n    return;\n  }\n\n  if (prevMoveEnded) {\n    let result;\n    let direction = null;\n\n    if (\n      e.type === 'keydown' &&\n      e.key &&\n      ['ArrowLeft', 'ArrowRight', 'ArrowUp', 'ArrowDown'].includes(e.key)\n    ) {\n      direction = e.key.replace('Arrow', '').toUpperCase();\n    }\n\n    if (['LEFT', 'RIGHT', 'UP', 'DOWN'].includes(direction)) {\n      result = game.performMove(direction);\n    } else {\n      return;\n    }\n\n    if (result.moved) {\n      prevMoveEnded = false;\n\n      animateAndRender(result);\n    } else {\n    }\n  }\n}\n\nfunction createCellElement(value, row, col, id) {\n  const cell = document.createElement('div');\n\n  cell.id = `cell-${id}`;\n  cell.className = `cell cell--${value}`;\n  cell.textContent = value;\n  cell.style.transform = `translate(${col * 83}px, ${row * 83}px)`;\n\n  return cell;\n}\n\nfunction clearBoard() {\n  const cells = field.querySelectorAll('.cell');\n\n  cells.forEach((cell) => cell.remove());\n}\n\nfunction initialiseBoard(boardState) {\n  for (let i = 0; i < boardState.length; i++) {\n    for (let j = 0; j < boardState[i].length; j++) {\n      const cellObj = boardState[i][j];\n      const value = cellObj ? cellObj.value : 0;\n\n      if (value !== 0) {\n        const cell = createCellElement(value, i, j, cellObj.id);\n\n        field.appendChild(cell);\n      }\n    }\n  }\n}\n\nbutton.addEventListener('click', () => {\n  if (game.status !== 'idle') {\n    game.restart();\n    clearBoard();\n\n    button.textContent = 'Start';\n    button.classList.remove('restart');\n    button.classList.add('start');\n\n    scoreElement.textContent = game.getScore();\n\n    messageStart.classList.remove('hidden');\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n\n    document.removeEventListener('keydown', gameCallback);\n\n    if (game.status === 'idle' && button.textContent === 'Start') {\n      return;\n    }\n  }\n\n  if (button.textContent === 'Start') {\n    game.start();\n\n    button.textContent = 'Restart';\n    button.classList.remove('start');\n    button.classList.add('restart');\n\n    messageStart.classList.add('hidden');\n\n    initialiseBoard(game.getState());\n\n    scoreElement.textContent = game.getScore();\n\n    document.addEventListener('keydown', gameCallback);\n  }\n});\n","'use strict';\n\nclass Game {\n  constructor() {\n    this.state = [\n      [null, null, null, null],\n      [null, null, null, null],\n      [null, null, null, null],\n      [null, null, null, null],\n    ];\n    this.score = 0;\n    this.status = 'idle';\n    this.moved = false;\n    this.nextCellId = 1;\n  }\n\n  getState() {\n    return this.state;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  moveLeft() {\n    const stateCopy = this.state.map((row) => {\n      return row.map((cell) => (cell ? { ...cell } : null));\n    });\n    const transitions = [];\n\n    this.moved = false;\n\n    for (let i = 0; i < stateCopy.length; i++) {\n      const merged = [false, false, false, false];\n\n      for (let j = 0; j < stateCopy[i].length; j++) {\n        if (stateCopy[i][j] === null) {\n          continue;\n        }\n\n        let k = j;\n\n        while (k > 0 && stateCopy[i][k - 1] === null) {\n          k--;\n        }\n\n        if (k !== j) {\n          stateCopy[i][k] = stateCopy[i][j];\n          stateCopy[i][j] = null;\n          this.moved = true;\n\n          transitions.push({\n            id: stateCopy[i][k].id,\n            type: 'move',\n            from: [i, j],\n            to: [i, k],\n          });\n        }\n\n        if (\n          k > 0 &&\n          stateCopy[i][k - 1] !== null &&\n          stateCopy[i][k].value === stateCopy[i][k - 1].value &&\n          !merged[k - 1]\n        ) {\n          transitions.push({\n            id: stateCopy[i][k].id,\n            type: 'merge',\n            from: [i, k],\n            to: [i, k - 1],\n            mergeIntoId: stateCopy[i][k - 1].id,\n          });\n\n          stateCopy[i][k - 1].value *= 2;\n          this.score += stateCopy[i][k - 1].value;\n          stateCopy[i][k] = null;\n          merged[k - 1] = true;\n          this.moved = true;\n        }\n      }\n    }\n\n    return { newState: stateCopy, transitions, moved: this.moved };\n  }\n\n  moveRight() {\n    const stateCopy = this.state.map((row) => {\n      return row.map((cell) => (cell ? { ...cell } : null));\n    });\n    const transitions = [];\n\n    this.moved = false;\n\n    for (let i = 0; i < stateCopy.length; i++) {\n      const merged = [false, false, false, false];\n\n      for (let j = stateCopy[i].length - 1; j >= 0; j--) {\n        if (stateCopy[i][j] === null) {\n          continue;\n        }\n\n        let k = j;\n\n        while (k < stateCopy[i].length - 1 && stateCopy[i][k + 1] === null) {\n          k++;\n        }\n\n        if (k !== j) {\n          stateCopy[i][k] = stateCopy[i][j];\n          stateCopy[i][j] = null;\n          this.moved = true;\n\n          transitions.push({\n            id: stateCopy[i][k].id,\n            type: 'move',\n            from: [i, j],\n            to: [i, k],\n          });\n        }\n\n        if (\n          k < stateCopy[i].length - 1 &&\n          stateCopy[i][k + 1] !== null &&\n          stateCopy[i][k].value === stateCopy[i][k + 1].value &&\n          !merged[k + 1]\n        ) {\n          transitions.push({\n            id: stateCopy[i][k].id,\n            type: 'merge',\n            from: [i, k],\n            to: [i, k + 1],\n            mergeIntoId: stateCopy[i][k + 1].id,\n          });\n\n          stateCopy[i][k + 1].value *= 2;\n          this.score += stateCopy[i][k + 1].value;\n          stateCopy[i][k] = null;\n          merged[k + 1] = true;\n          this.moved = true;\n        }\n      }\n    }\n\n    return { newState: stateCopy, transitions, moved: this.moved };\n  }\n\n  moveUp() {\n    const stateCopy = this.state.map((row) => {\n      return row.map((cell) => (cell ? { ...cell } : null));\n    });\n    const transitions = [];\n\n    this.moved = false;\n\n    for (let j = 0; j < stateCopy[0].length; j++) {\n      const merged = [false, false, false, false];\n\n      for (let i = 0; i < stateCopy.length; i++) {\n        if (stateCopy[i][j] === null) {\n          continue;\n        }\n\n        let k = i;\n\n        while (k > 0 && stateCopy[k - 1][j] === null) {\n          k--;\n        }\n\n        if (k !== i) {\n          stateCopy[k][j] = stateCopy[i][j];\n          stateCopy[i][j] = null;\n          this.moved = true;\n\n          transitions.push({\n            id: stateCopy[k][j].id,\n            type: 'move',\n            from: [i, j],\n            to: [k, j],\n          });\n        }\n\n        if (\n          k > 0 &&\n          stateCopy[k - 1][j] !== null &&\n          stateCopy[k][j].value === stateCopy[k - 1][j].value &&\n          !merged[k - 1]\n        ) {\n          transitions.push({\n            id: stateCopy[k][j].id,\n            type: 'merge',\n            from: [k, j],\n            to: [k - 1, j],\n            mergeIntoId: stateCopy[k - 1][j].id,\n          });\n\n          stateCopy[k - 1][j].value *= 2;\n          this.score += stateCopy[k - 1][j].value;\n          stateCopy[k][j] = null;\n          merged[k - 1] = true;\n          this.moved = true;\n        }\n      }\n    }\n\n    return { newState: stateCopy, transitions, moved: this.moved };\n  }\n\n  moveDown() {\n    const stateCopy = this.state.map((row) => {\n      return row.map((cell) => (cell ? { ...cell } : null));\n    });\n    const transitions = [];\n\n    this.moved = false;\n\n    for (let j = 0; j < stateCopy[0].length; j++) {\n      const merged = [false, false, false, false];\n\n      for (let i = stateCopy.length - 1; i >= 0; i--) {\n        if (stateCopy[i][j] === null) {\n          continue;\n        }\n\n        let k = i;\n\n        while (k < stateCopy.length - 1 && stateCopy[k + 1][j] === null) {\n          k++;\n        }\n\n        if (k !== i) {\n          stateCopy[k][j] = stateCopy[i][j];\n          stateCopy[i][j] = null;\n          this.moved = true;\n\n          transitions.push({\n            id: stateCopy[k][j].id,\n            type: 'move',\n            from: [i, j],\n            to: [k, j],\n          });\n        }\n\n        if (\n          k < stateCopy.length - 1 &&\n          stateCopy[k + 1][j] !== null &&\n          stateCopy[k][j].value === stateCopy[k + 1][j].value &&\n          !merged[k + 1]\n        ) {\n          transitions.push({\n            id: stateCopy[k][j].id,\n            type: 'merge',\n            from: [k, j],\n            to: [k + 1, j],\n            mergeIntoId: stateCopy[k + 1][j].id,\n          });\n\n          stateCopy[k + 1][j].value *= 2;\n          this.score += stateCopy[k + 1][j].value;\n          stateCopy[k][j] = null;\n          merged[k + 1] = true;\n          this.moved = true;\n        }\n      }\n    }\n\n    return { newState: stateCopy, transitions, moved: this.moved };\n  }\n\n  defineStep([rowIndex, columnIndex], direction) {\n    const currentItem = this.state[rowIndex][columnIndex];\n    const currentRow = this.state[rowIndex];\n    const currentColumn = this.state.map((row) => row[columnIndex]);\n    let step = 0;\n\n    switch (direction) {\n      case 'left':\n        for (let i = columnIndex - 1; i >= 0; i--) {\n          if (currentRow[i] === 0) {\n            step++;\n          } else if (currentRow[i] === currentItem) {\n            return step + 1;\n          } else {\n            break;\n          }\n        }\n\n        return step;\n      case 'right':\n        for (let i = columnIndex + 1; i < currentRow.length; i++) {\n          if (currentRow[i] === 0) {\n            step++;\n          } else if (currentRow[i] === currentItem) {\n            return step + 1;\n          } else {\n            break;\n          }\n        }\n\n        return step;\n      case 'up':\n        for (let i = rowIndex - 1; i >= 0; i--) {\n          if (currentColumn[i] === 0) {\n            step++;\n          } else if (currentColumn[i] === currentItem) {\n            return step + 1;\n          } else {\n            break;\n          }\n        }\n\n        return step;\n      case 'down':\n        for (let i = rowIndex + 1; i < currentColumn.length; i++) {\n          if (currentColumn[i] === 0) {\n            step++;\n          } else if (currentColumn[i] === currentItem) {\n            return step + 1;\n          } else {\n            break;\n          }\n        }\n\n        return step;\n    }\n  }\n\n  start() {\n    this.born();\n    this.born();\n    this.status = 'playing';\n  }\n\n  restart() {\n    this.state = [\n      [null, null, null, null],\n      [null, null, null, null],\n      [null, null, null, null],\n      [null, null, null, null],\n    ];\n    this.status = 'idle';\n    this.score = 0;\n    this.nextCellId = 1;\n  }\n\n  check() {\n    for (let i = 0; i < this.state.length; i++) {\n      for (let j = 0; j < this.state[i].length; j++) {\n        const current = this.state[i][j];\n\n        if (current !== null && current.value >= 2048) {\n          this.status = 'win';\n\n          return;\n        }\n\n        if (!current) {\n          return;\n        }\n\n        if (j < this.state[i].length - 1) {\n          const rightCell = this.state[i][j + 1];\n\n          if (rightCell !== null && rightCell.value === current.value) {\n            return;\n          }\n        }\n\n        if (i < this.state.length - 1) {\n          const downCell = this.state[i + 1][j];\n\n          if (downCell !== null && downCell.value === current.value) {\n            return;\n          }\n        }\n      }\n    }\n\n    this.status = 'lose';\n  }\n\n  born() {\n    const emptyCells = [];\n\n    for (let i = 0; i < 4; i++) {\n      for (let j = 0; j < 4; j++) {\n        if (this.state[i][j] === null) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    if (emptyCells.length === 0) {\n      return;\n    }\n\n    const [row, col] =\n      emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    const value = Math.random() < 0.1 ? 4 : 2;\n    const clearStateCell = { id: this.nextCellId++, value };\n\n    this.state[row][col] = clearStateCell;\n\n    const spawnTransition = {\n      id: clearStateCell.id,\n      type: 'spawn',\n      to: [row, col],\n      value,\n    };\n\n    return spawnTransition;\n  }\n\n  performMove(direction) {\n    let moveResult;\n\n    switch (direction) {\n      case 'LEFT':\n        moveResult = this.moveLeft();\n        break;\n      case 'RIGHT':\n        moveResult = this.moveRight();\n        break;\n      case 'UP':\n        moveResult = this.moveUp();\n        break;\n      case 'DOWN':\n        moveResult = this.moveDown();\n        break;\n      default:\n        return { newState: this.state, transitions: [], moved: false };\n    }\n\n    if (moveResult.moved) {\n      this.state = moveResult.newState;\n\n      const spawnTransition = this.born();\n\n      moveResult.transitions.push(spawnTransition);\n      this.check();\n    }\n\n    return moveResult;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _define_property } from \"./_define_property.js\";\n\nfunction _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n"],"names":["$ad1c00e896d27009$export$71511d61b312f219","target","i","arguments","length","source","ownKeys","Object","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","enumerable","forEach","key","value","defineProperty","configurable","writable","obj","$c3b10a83b523f372$export$71511d61b312f219","arr","len","arr2","Array","$efec029548ccee7f$export$71511d61b312f219","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","call","next","done","push","err","o","minLen","n","prototype","toString","slice","constructor","name","from","test","TypeError","$197cd56b15c33885$var$game","protoProps","Game","instance","Constructor","state","score","status","moved","nextCellId","stateCopy","map","row","cell","transitions","merged","j","k","id","type","to","mergeIntoId","newState","param","direction","_param","rowIndex","columnIndex","currentItem","currentRow","currentColumn","step","i1","i2","i3","born","current","rightCell","downCell","emptyCells","_emptyCells_Math_floor","Math","floor","random","col","clearStateCell","moveResult","moveLeft","moveRight","moveUp","moveDown","spawnTransition","check","$4fc75ccb937ab1df$var$_defineProperties","props","descriptor","$197cd56b15c33885$var$button","document","querySelector","$197cd56b15c33885$var$field","Z","$197cd56b15c33885$var$scoreElement","$197cd56b15c33885$var$bestScoreElement","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$prevMoveEnded","$197cd56b15c33885$var$gameCallback","e","includes","preventDefault","result","replace","toUpperCase","performMove","t","getElementById","style","transform","setTimeout","disappearingCell","remove","cellObject","newValue","textContent","className","cell1","$197cd56b15c33885$var$createCellElement","appendChild","getScore","parseInt","localStorage","setItem","classList","createElement","getItem","addEventListener","restart","cells","querySelectorAll","add","removeEventListener","start","$197cd56b15c33885$var$initialiseBoard","boardState","cellObj","getState"],"version":3,"file":"index.6d3d4475.js.map"}